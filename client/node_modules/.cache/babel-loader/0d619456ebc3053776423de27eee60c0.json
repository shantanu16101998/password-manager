{"ast":null,"code":"const crypto = require(\"crypto\");\n\nconst secret = \"pppppppppppppppppppppppppppppppp\";\n\nconst encrypt = password => {\n  const iv = Buffer.from(crypto.randomBytes(16));\n  const cipher = crypto.createCipheriv(\"aes-256-ctr\", Buffer.from(secret), iv);\n  const encryptedPassword = Buffer.concat([cipher.update(password), cipher.final()]);\n  return {\n    iv: iv.toString(\"hex\"),\n    password: encryptedPassword.toString(\"hex\")\n  };\n};\n\nconst decrypt = encryption => {\n  try {\n    const decipher = crypto.createDecipheriv(\"aes-256-ctr\", Buffer.from(secret), Buffer.from(encryption.iv, \"hex\"));\n    const decryptedPassword = Buffer.concat([decipher.update(Buffer.from(encryption.password, \"hex\")), decipher.final()]);\n    return decryptedPassword.toString();\n  } catch (e) {\n    console.log(error);\n  }\n};\n\nmodule.exports = {\n  encrypt,\n  decrypt\n};","map":{"version":3,"sources":["F:/projects/password_manager/client/src/component/WebsitePassForm/Encryption.js"],"names":["crypto","require","secret","encrypt","password","iv","Buffer","from","randomBytes","cipher","createCipheriv","encryptedPassword","concat","update","final","toString","decrypt","encryption","decipher","createDecipheriv","decryptedPassword","e","console","log","error","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,MAAM,GAAG,kCAAf;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAC5B,QAAMC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACQ,WAAP,CAAmB,EAAnB,CAAZ,CAAX;AACA,QAAMC,MAAM,GAAGT,MAAM,CAACU,cAAP,CAAsB,aAAtB,EAAqCJ,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAArC,EAA0DG,EAA1D,CAAf;AAEA,QAAMM,iBAAiB,GAAGL,MAAM,CAACM,MAAP,CAAc,CACtCH,MAAM,CAACI,MAAP,CAAcT,QAAd,CADsC,EAEtCK,MAAM,CAACK,KAAP,EAFsC,CAAd,CAA1B;AAKA,SAAO;AACLT,IAAAA,EAAE,EAAEA,EAAE,CAACU,QAAH,CAAY,KAAZ,CADC;AAELX,IAAAA,QAAQ,EAAEO,iBAAiB,CAACI,QAAlB,CAA2B,KAA3B;AAFL,GAAP;AAID,CAbD;;AAeA,MAAMC,OAAO,GAAIC,UAAD,IAAgB;AAC9B,MAAG;AACH,UAAMC,QAAQ,GAAGlB,MAAM,CAACmB,gBAAP,CACf,aADe,EAEfb,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAFe,EAGfI,MAAM,CAACC,IAAP,CAAYU,UAAU,CAACZ,EAAvB,EAA2B,KAA3B,CAHe,CAAjB;AAMA,UAAMe,iBAAiB,GAAGd,MAAM,CAACM,MAAP,CAAc,CACtCM,QAAQ,CAACL,MAAT,CAAgBP,MAAM,CAACC,IAAP,CAAYU,UAAU,CAACb,QAAvB,EAAiC,KAAjC,CAAhB,CADsC,EAEtCc,QAAQ,CAACJ,KAAT,EAFsC,CAAd,CAA1B;AAKA,WAAOM,iBAAiB,CAACL,QAAlB,EAAP;AACD,GAbC,CAcF,OAAMM,CAAN,EAAQ;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACA,CAlBD;;AAoBAC,MAAM,CAACC,OAAP,GAAiB;AAAEvB,EAAAA,OAAF;AAAWa,EAAAA;AAAX,CAAjB","sourcesContent":["const crypto = require(\"crypto\");\r\nconst secret = \"pppppppppppppppppppppppppppppppp\";\r\n\r\nconst encrypt = (password) => {\r\n  const iv = Buffer.from(crypto.randomBytes(16));\r\n  const cipher = crypto.createCipheriv(\"aes-256-ctr\", Buffer.from(secret), iv);\r\n\r\n  const encryptedPassword = Buffer.concat([\r\n    cipher.update(password),\r\n    cipher.final(),\r\n  ]);\r\n\r\n  return {\r\n    iv: iv.toString(\"hex\"),\r\n    password: encryptedPassword.toString(\"hex\"),\r\n  };\r\n};\r\n\r\nconst decrypt = (encryption) => {\r\n  try{\r\n  const decipher = crypto.createDecipheriv(\r\n    \"aes-256-ctr\",\r\n    Buffer.from(secret),\r\n    Buffer.from(encryption.iv, \"hex\")\r\n  );\r\n\r\n  const decryptedPassword = Buffer.concat([\r\n    decipher.update(Buffer.from(encryption.password, \"hex\")),\r\n    decipher.final(),\r\n  ]);\r\n\r\n  return decryptedPassword.toString();\r\n}\r\ncatch(e){\r\n  console.log(error);\r\n}\r\n};\r\n\r\nmodule.exports = { encrypt, decrypt };"]},"metadata":{},"sourceType":"module"}
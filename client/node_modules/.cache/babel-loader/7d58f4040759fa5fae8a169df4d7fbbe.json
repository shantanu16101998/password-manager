{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\password_manager\\\\client\\\\src\\\\component\\\\MainPage\\\\mainpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport 'firebase/auth';\nimport './mainpage.css';\nimport firebase from \"../../firebase\"; // firebase.initializeApp({\n//     apiKey: \"AIzaSyBbPfxb9WHvag2T2Q1svoMVAYqqY74ecNU\",\n//     authDomain: \"password-manager-e738c.firebaseapp.com\",\n//     databaseURL: \"https://password-manager-e738c-default-rtdb.firebaseio.com\",\n//     projectId: \"password-manager-e738c\",\n//     storageBucket: \"password-manager-e738c.appspot.com\",\n//     messagingSenderId: \"992983353719\",\n//     appId: \"1:992983353719:web:4b96ba80ba44f9366b7972\",\n//     measurementId: \"G-EQEDQWMDB0\"\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mainpage() {\n  _s();\n\n  const [Users, setUsers] = useState('');\n\n  function onsubmit() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(result => {\n      /** @type {firebase.auth.OAuthCredential} */\n      var credential = result.credential; // This gives you a Google Access Token. You can use it to access the Google API.\n\n      var token = credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      setUsers(firebase.auth().currentUser.email); // ...\n    }).catch(error => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        window.location.replace('/form');\n      } else {}\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"joinOuterContainer\",\n    style: {\n      backgroundImage: `url(\"lock.jpg\")`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinInnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Password Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'button mt-20',\n        onClick: onsubmit,\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mainpage, \"FKNfp1KeQGJLhboIkqNA6kAbJ3g=\");\n\n_c = Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["F:/projects/password_manager/client/src/component/MainPage/mainpage.js"],"names":["React","useState","useEffect","firebase","Mainpage","Users","setUsers","onsubmit","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","token","accessToken","user","currentUser","email","catch","error","errorCode","code","errorMessage","message","onAuthStateChanged","window","location","replace","backgroundImage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAGE,WAASM,QAAT,GAAmB;AACf,QAAIC,QAAQ,GAAG,IAAIL,QAAQ,CAACM,IAAT,CAAcC,kBAAlB,EAAf;AACAP,IAAAA,QAAQ,CAACM,IAAT,GACCE,eADD,CACiBH,QADjB,EAECI,IAFD,CAEOC,MAAD,IAAY;AAChB;AACA,UAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB,CAFgB,CAIhB;;AACA,UAAIC,KAAK,GAAGD,UAAU,CAACE,WAAvB,CALgB,CAMhB;;AACA,UAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AACAX,MAAAA,QAAQ,CAACH,QAAQ,CAACM,IAAT,GAAgBS,WAAhB,CAA4BC,KAA7B,CAAR,CARgB,CAShB;AACD,KAZD,EAYGC,KAZH,CAYUC,KAAD,IAAW;AAClB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHkB,CAIlB;;AACA,UAAIN,KAAK,GAAGE,KAAK,CAACF,KAAlB,CALkB,CAMlB;;AACA,UAAIL,UAAU,GAAGO,KAAK,CAACP,UAAvB,CAPkB,CAQlB;AACD,KArBD;AAuBAX,IAAAA,QAAQ,CAACM,IAAT,GAAgBiB,kBAAhB,CAAmC,UAAST,IAAT,EAAe;AAChD,UAAIA,IAAJ,EAAU;AACRU,QAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,OAAxB;AAED,OAHD,MAGO,CACN;AACF,KAND;AAUH;;AAKH,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,KAAK,EAAE;AACzCC,MAAAA,eAAe,EAAG;AADuB,KAA3C;AAAA,2BAGE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAE,cAAnB;AAAmC,QAAA,OAAO,EAAEvB,QAA5C;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvDuBH,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport 'firebase/auth'\r\nimport './mainpage.css';\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\n\r\n// firebase.initializeApp({\r\n//     apiKey: \"AIzaSyBbPfxb9WHvag2T2Q1svoMVAYqqY74ecNU\",\r\n//     authDomain: \"password-manager-e738c.firebaseapp.com\",\r\n//     databaseURL: \"https://password-manager-e738c-default-rtdb.firebaseio.com\",\r\n//     projectId: \"password-manager-e738c\",\r\n//     storageBucket: \"password-manager-e738c.appspot.com\",\r\n//     messagingSenderId: \"992983353719\",\r\n//     appId: \"1:992983353719:web:4b96ba80ba44f9366b7972\",\r\n//     measurementId: \"G-EQEDQWMDB0\"\r\n// });\r\n\r\n\r\n\r\n\r\nexport default function Mainpage() {\r\n    \r\n  const [Users, setUsers] = useState('');\r\n\r\n    \r\n    function onsubmit(){\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth()\r\n        .signInWithPopup(provider)\r\n        .then((result) => {\r\n          /** @type {firebase.auth.OAuthCredential} */\r\n          var credential = result.credential;\r\n      \r\n          // This gives you a Google Access Token. You can use it to access the Google API.\r\n          var token = credential.accessToken;\r\n          // The signed-in user info.\r\n          var user = result.user;\r\n          setUsers(firebase.auth().currentUser.email)\r\n          // ...\r\n        }).catch((error) => {\r\n          // Handle Errors here.\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          // The email of the user's account used.\r\n          var email = error.email;\r\n          // The firebase.auth.AuthCredential type that was used.\r\n          var credential = error.credential;\r\n          // ...\r\n        });\r\n        \r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n          if (user) {\r\n            window.location.replace('/form');\r\n            \r\n          } else {\r\n          }\r\n        });\r\n\r\n\r\n        \r\n    }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"joinOuterContainer\" style={{ \r\n      backgroundImage: `url(\"lock.jpg\")` \r\n    }}>\r\n      <div className=\"joinInnerContainer\">\r\n        <h1 className=\"heading\">Password Manager</h1>\r\n        <button className={'button mt-20'} onClick={onsubmit} type=\"submit\">Sign In</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}